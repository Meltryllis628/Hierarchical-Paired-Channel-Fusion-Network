import torch
import torch.nn as nn
from modules.Conv import ConvBlock
from modules.MPFL import MPFL
from modules.PCF import PCF
from modules.RSA import RSA

class HPCFNet_tiny(nn.Module):
    def __init__(self) -> None:
        super(HPCFNet_tiny, self).__init__()
        self.conv_1_2_a = ConvBlock(3, 16, stride=1)
        self.conv_1_2_b = ConvBlock(3, 16, stride=1)
        self.conv_2_2_a = ConvBlock(16, 32)
        self.conv_2_2_b = ConvBlock(16, 32)
        self.conv_3_3_a = ConvBlock(32, 64)
        self.conv_3_3_b = ConvBlock(32, 64)
        self.conv_4_3_a = ConvBlock(64, 128)
        self.conv_4_3_b = ConvBlock(64, 128)
        self.conv_5_3_a = ConvBlock(128, 128)
        self.conv_5_3_b = ConvBlock(128, 128)
        self.pcf_1 = PCF(128, False)
        self.rsa_1 = RSA(128)
        self.conv_1 = ConvBlock(256, 128, stride=1)
        self.mpfl_1 = MPFL(128)
        self.deconv_1 = nn.ConvTranspose2d(256, 128, kernel_size=2, stride=2)
        self.pcf_2 = PCF(128, True)
        self.rsa_2 = RSA(128)
        self.conv_2 = ConvBlock(384, 128, stride=1)
        self.mpfl_2 = MPFL(128)
        self.deconv_2 = nn.ConvTranspose2d(256, 64, kernel_size=2, stride=2)
        self.pcf_3 = PCF(64, True)
        self.rsa_3 = RSA(64)
        self.conv_3 = ConvBlock(192, 64, stride=1)
        self.mpfl_3 = MPFL(64)
        self.deconv_3 = nn.ConvTranspose2d(128, 32, kernel_size=2, stride=2)
        self.pcf_4 = PCF(32, True)
        self.rsa_4 = RSA(32)
        self.conv_4 = ConvBlock(96, 32, stride=1)
        self.mpfl_4 = MPFL(32)
        self.deconv_4 = nn.ConvTranspose2d(64, 16, kernel_size=2, stride=2)
        self.pcf_5 = PCF(16, True)
        self.conv_5 = ConvBlock(48, 16, stride=1)
        self.conv_6 = nn.Conv2d(16, 2, (1,1))

    def forward(self, x):
        t0, t1 = torch.chunk(x, chunks=2, dim=2)
        t0_1 = self.conv_1_2_a(t0)
        t1_1 = self.conv_1_2_b(t1)
        t0_2 = self.conv_2_2_a(t0_1)
        t1_2 = self.conv_2_2_b(t1_1)
        t0_3 = self.conv_3_3_a(t0_2)
        t1_3 = self.conv_3_3_b(t1_2)
        t0_4 = self.conv_4_3_a(t0_3)
        t1_4 = self.conv_4_3_b(t1_3)
        t0_5 = self.conv_5_3_a(t0_4)
        t1_5 = self.conv_5_3_b(t1_4)
        f = self.pcf_1(t0_5, t1_5)
        f = self.rsa_1(t0_5, t1_5, f)
        f = self.conv_1(f)
        f = self.mpfl_1(f)
        f = self.deconv_1(f)
        f = self.pcf_2(t0_4, t1_4, f)
        f = self.rsa_2(t0_4, t0_4, f)
        f = self.conv_2(f)
        f = self.mpfl_2(f)
        f = self.deconv_2(f)
        f = self.pcf_3(t0_3, t1_3, f)
        f = self.rsa_3(t0_3, t1_3, f)
        f = self.conv_3(f)
        f = self.mpfl_3(f)
        f = self.deconv_3(f)
        f = self.pcf_4(t0_2, t1_2, f)
        f = self.rsa_4(t0_2, t1_2, f)
        f = self.conv_4(f)
        f = self.mpfl_4(f)
        f = self.deconv_4(f)
        f = self.pcf_5(t0_1, t1_1, f)
        f = self.conv_5(f)
        f = self.conv_6(f)
        return f
